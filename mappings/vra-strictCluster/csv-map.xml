<?xml version="1.0" encoding="UTF-8"?>
<!-- csv-map vra-strictCluster -->
<xml>
    <mapping key="IMAGE_ID">
        xquery version "3.0";
        let $imageID := $line/column[@heading-index="IMAGE_ID"]/string()
        let $returnID :=  
            if($imageID) then
                let $imageID_A :=  if(starts-with($imageID, "i_")) then ($imageID) else ("i_" || $imageID) 
                return $imageID_A
            else 
                concat("i_", util:uuid())
        let $session := session:set-attribute("tempImageUUID", $returnID)
        return $returnID
    </mapping>
    <mapping key="IMAGE_Filename">$line/column[@heading-index="IMAGE_Filename"]/string()</mapping>
    <mapping key="IMAGE_Href">$line/column[@heading-index="IMAGE_Href"]/string()</mapping>
    <mapping key="IMAGE_AccessionID">$line/column[@heading-index="IMAGE_AccessionID"]/string()</mapping>
    <mapping key="IMAGE_VendorID">$line/column[@heading-index="IMAGE_VendorID"]/string()</mapping>
    <mapping key="IMAGE_VendorName">$line/column[@heading-index="IMAGE_VendorName"]/string()</mapping>
        let $VendorName := $line/column[@heading-index="IMAGE_VendorName"]/string()
        let $session :=  session:set-attribute("tempIMAGE_VendorName", $VendorName)
        return $VendorName
    <mapping key="IMAGE_LocalRepoName">$line/column[@heading-index="IMAGE_LocalRepoName"]/string()</mapping>
    <mapping key="WORK_IDno">$line/column[@heading-index="WORK_IDno"]/string()</mapping>
    <mapping key="WORK_AgentDisplay">
xquery version "3.0";
let $agentDisplay := $line/column[@heading-index="WORK_AgentDisplay"]/string()
return 
  if($agentDisplay)
  then (
    $agentDisplay
  ) else (
    let $agent1 :=
      (: Test for Agent1Name :)
      if($line/column[@heading-index="WORK_Agent1Name"] != "")
      then (
	        let $attribution := if($line/column[@heading-index="WORK_Agent1Attribution"]  != "") then ($line/column[@heading-index="WORK_Agent1Attribution"]/string() || " ") else ()
	        let $role := if($line/column[@heading-index="WORK_Agent1Role"] != "") then ( " (" || $line/column[@heading-index="WORK_Agent1Role"]/string() || ")") else ()
	    return $attribution || $line/column[@heading-index="WORK_Agent1Name"]/string() || $role
      ) else ()
      
    let $agent2 := (: Test for Agent2Name :)
      if($line/column[@heading-index="WORK_Agent2Name"] != "")
      then (
	        let $attribution := if($line/column[@heading-index="WORK_Agent2Attribution"] != "") then ($line/column[@heading-index="WORK_Agent2Attribution"]/string() || " ") else ()
	        let $role := if($line/column[@heading-index="WORK_Agent2Role"] != "") then ( " (" || $line/column[@heading-index="WORK_Agent2Role"]/string() || ")") else ()
	    return $attribution || $line/column[@heading-index="WORK_Agent2Name"]/string() || $role
      ) else ()
      
    let $agent3 := (: Test for Agent3Name :)
      if($line/column[@heading-index="WORK_Agent3Name"] != "")
      then (
	        let $attribution := if($line/column[@heading-index="WORK_Agent3Attribution"] != "") then ($line/column[@heading-index="WORK_Agent3Attribution"]/string() || " ") else ()
	        let $role := if($line/column[@heading-index="WORK_Agent3Role"] != "") then ( " (" || $line/column[@heading-index="WORK_Agent3Role"]/string() || ")") else ()
	    return $attribution || $line/column[@heading-index="WORK_Agent3Name"]/string() || $role
      ) else ()

    return string-join(($agent1, $agent2, $agent3), '; ')
  )    </mapping>
    <mapping key="WORK_Agent1NameType">$line/column[@heading-index="WORK_Agent1NameType"]/string()</mapping>
    <mapping key="WORK_Agent1Name">$line/column[@heading-index="WORK_Agent1Name"]/string()</mapping>
    <mapping key="WORK_Agent1NameVocab">$line/column[@heading-index="WORK_Agent1NameVocab"]/string()</mapping>
    <mapping key="WORK_Agent1NameRefid">$line/column[@heading-index="WORK_Agent1NameRefid"]/string()</mapping>
    <mapping key="WORK_Agent1Role">$line/column[@heading-index="WORK_Agent1Role"]/string()</mapping>
    <mapping key="WORK_Agent1RoleVocab">$line/column[@heading-index="WORK_Agent1RoleVocab"]/string()</mapping>
    <mapping key="WORK_Agent1RoleRefid">$line/column[@heading-index="WORK_Agent1RoleRefid"]/string()</mapping>
    <mapping key="WORK_Agent1Attribution">$line/column[@heading-index="WORK_Agent1Attribution"]/string()</mapping>
    <mapping key="WORK_Agent2NameType">$line/column[@heading-index="WORK_Agent2NameType"]/string()</mapping>
    <mapping key="WORK_Agent2Name">$line/column[@heading-index="WORK_Agent2Name"]/string()</mapping>
    <mapping key="WORK_Agent2NameVocab">$line/column[@heading-index="WORK_Agent2NameVocab"]/string()</mapping>
    <mapping key="WORK_Agent2NameRefid">$line/column[@heading-index="WORK_Agent2NameRefid"]/string()</mapping>
    <mapping key="WORK_Agent2Role">$line/column[@heading-index="WORK_Agent2Role"]/string()</mapping>
    <mapping key="WORK_Agent2RoleVocab">$line/column[@heading-index="WORK_Agent2RoleVocab"]/string()</mapping>
    <mapping key="WORK_Agent2RoleRefid">$line/column[@heading-index="WORK_Agent2RoleRefid"]/string()</mapping>
    <mapping key="WORK_Agent2Attribution">$line/column[@heading-index="WORK_Agent2Attribution"]/string()</mapping>
    <mapping key="WORK_Agent3NameType">$line/column[@heading-index="WORK_Agent3NameType"]/string()</mapping>
    <mapping key="WORK_Agent3Name">$line/column[@heading-index="WORK_Agent3Name"]/string()</mapping>
    <mapping key="WORK_Agent3NameVocab">$line/column[@heading-index="WORK_Agent3NameVocab"]/string()</mapping>
    <mapping key="WORK_Agent3NameRefid">$line/column[@heading-index="WORK_Agent3NameRefid"]/string()</mapping>
    <mapping key="WORK_Agent3Role">$line/column[@heading-index="WORK_Agent3Role"]/string()</mapping>
    <mapping key="WORK_Agent3RoleVocab">$line/column[@heading-index="WORK_Agent3RoleVocab"]/string()</mapping>
    <mapping key="WORK_Agent3RoleRefid">$line/column[@heading-index="WORK_Agent3RoleRefid"]/string()</mapping>
    <mapping key="WORK_Agent3Attribution">$line/column[@heading-index="WORK_Agent3Attribution"]/string()</mapping>
    <mapping key="WORK_CulturalContextDisplay">
    if (not($line/column[@heading-index="WORK_CulturalContextDisplay"]/string())) then 
        string-join(($line/column[@heading-index="WORK_CulturalContext1"]/string(), $line/column[@heading-index="WORK_CulturalContext2"]/string()), '; ')
    else
        $line/column[@heading-index="WORK_CulturalContextDisplay"]/string()
    </mapping>
    <mapping key="WORK_CulturalContext1">$line/column[@heading-index="WORK_CulturalContext1"]/string()</mapping>
    <mapping key="WORK_CulturalContext1Vocab">$line/column[@heading-index="WORK_CulturalContext1Vocab"]/string()</mapping>
    <mapping key="WORK_CulturalContext1Refid">$line/column[@heading-index="WORK_CulturalContext1Refid"]/string()</mapping>
    <mapping key="WORK_CulturalContext2">$line/column[@heading-index="WORK_CulturalContext2"]/string()</mapping>
    <mapping key="WORK_CulturalContext2Vocab">$line/column[@heading-index="WORK_CulturalContext2Vocab"]/string()</mapping>
    <mapping key="WORK_CulturalContext2Refid">$line/column[@heading-index="WORK_CulturalContext2Refid"]/string()</mapping>
    <mapping key="WORK_DateDisplay">
xquery version "3.0";
let $dateDisplay := $line/column[@heading-index="WORK_DateDisplay"]/string()
return 
  if($dateDisplay)
  then (
    $dateDisplay
  ) else (
    let $date1 :=
      (: Test for EarliestDate1 :)
      if($line/column[@heading-index="WORK_EarliestDate1"] != "")
      then (
	        let $date1Type := if($line/column[@heading-index="WORK_Date1Type"]  != "") then ($line/column[@heading-index="WORK_Date1Type"]/string() || " ") else ()
	        let $latestDate1 := if($line/column[@heading-index="WORK_LatestDate1"] != "") then ( " - " || $line/column[@heading-index="WORK_LatestDate1"]/string() || "") else ()
	    return $date1Type || $line/column[@heading-index="WORK_EarliestDate1"]/string() || $latestDate1
      ) else ()
      
    let $date2 := 
      (: Test for WORK_EarliestDate2 :)
      if($line/column[@heading-index="WORK_EarliestDate2"] != "")
      then (
	        let $date2Type := if($line/column[@heading-index="WORK_Date2Type"] != "") then ($line/column[@heading-index="WORK_Date2Type"]/string() || " ") else ()
	        let $latestDate2 := if($line/column[@heading-index="WORK_LatestDate2"] != "") then ( " - " || $line/column[@heading-index="WORK_LatestDate2"]/string() || "") else ()
	    return $date2Type || $line/column[@heading-index="WORK_EarliestDate2"]/string() || $latestDate2
      ) else ()
      
    return string-join(($date1, $date2), '; ')
  )        
    </mapping>
    <mapping key="WORK_Date1Type">$line/column[@heading-index="WORK_Date1Type"]/string()</mapping>
    <mapping key="WORK_EarliestDate1">$line/column[@heading-index="WORK_EarliestDate1"]/string()</mapping>
    <mapping key="WORK_LatestDate1">
        let $latestDate1 := $line/column[@heading-index="WORK_LatestDate1"]/string()
return 
  if($latestDate1)
  then (
    $latestDate1
  ) else (
    $line/column[@heading-index="WORK_EarliestDate1"]/string()
  )
    </mapping>
    <mapping key="WORK_Date2Type">$line/column[@heading-index="WORK_Date2Type"]/string()</mapping>
    <mapping key="WORK_EarliestDate2">$line/column[@heading-index="WORK_EarliestDate2"]/string()</mapping>
    <mapping key="WORK_LatestDate2">
        let $latestDate2 := $line/column[@heading-index="WORK_LatestDate2"]/string()
return 
  if($latestDate2)
  then (
    $latestDate2
  ) else (
    $line/column[@heading-index="WORK_EarliestDate2"]/string()
  )
    </mapping>
    <mapping key="WORK_DescriptionDisplay">$line/column[@heading-index="WORK_DescriptionDisplay"]/string()</mapping>
    <mapping key="WORK_DescriptionSource">replace($line/column[@heading-index="WORK_DescriptionSource"]/string(), '"', '|||quot|||')</mapping>
    <mapping key="WORK_InscriptionDisplay">$line/column[@heading-index="WORK_InscriptionDisplay"]/string()</mapping>
    <mapping key="WORK_LocationDisplay">
        xquery version "3.0";
let $locationDisplay := $line/column[@heading-index="WORK_LocationDisplay"]/string()
return 
  if($locationDisplay)
  then (
    $locationDisplay
  ) else (
    let $location1 :=
      (: Test for WORK_Location1Name :)
      if($line/column[@heading-index="WORK_Location1Name"] != "")
      then (
	        let $loc1NameType := if($line/column[@heading-index="WORK_Location1NameType"]  != "") then ($line/column[@heading-index="WORK_Location1NameType"]/string() || ": ") else ()
	        let $loc1objectType := if($line/column[@heading-index="WORK_Location1ObjType"] != "") then ( " (" || $line/column[@heading-index="WORK_Location1ObjType"]/string() || ")") else ()
	        let $loc1objectRefid := if($line/column[@heading-index="WORK_Location1ObjRefID"] != "") then ( " " || $line/column[@heading-index="WORK_Location1ObjRefID"]/string() || "") else ()
	        let $location1Geo := if($line/column[@heading-index="WORK_Location1Geo"] != "") then ( " (" || $line/column[@heading-index="WORK_Location1Geo"]/string() || ") ") else ()
	    return $loc1NameType || $line/column[@heading-index="WORK_Location1Name"]/string() || $location1Geo || $loc1objectRefid || $loc1objectType
      ) else ()
      
    let $location2 := 
      (: Test for WORK_Location2Name :)
      if($line/column[@heading-index="WORK_Location2Name"] != "")
      then (
	        let $loc2NameType := if($line/column[@heading-index="WORK_Location2NameType"]  != "") then ($line/column[@heading-index="WORK_Location2NameType"]/string() || ": ") else ()
	        let $loc2objectType := if($line/column[@heading-index="WORK_Location2ObjType"] != "") then ( " (" || $line/column[@heading-index="WORK_Location2ObjType"]/string() || ")") else ()
	        let $loc2objectRefid := if($line/column[@heading-index="WORK_Location2ObjRefID"] != "") then ( " " || $line/column[@heading-index="WORK_Location2ObjRefID"]/string() || "") else ()
	        let $location2Geo := if($line/column[@heading-index="WORK_Location2Geo"] != "") then ( " (" || $line/column[@heading-index="WORK_Location2Geo"]/string() || ") ") else ()
	    return $loc2NameType || $line/column[@heading-index="WORK_Location2Name"]/string() || $location2Geo || $loc2objectRefid || $loc2objectType
      ) else ()
      
    return string-join(($location1, $location2), '; ')
  )
    </mapping>
    <mapping key="WORK_LocationNotes">$line/column[@heading-index="WORK_LocationNotes"]/string()</mapping>
    <mapping key="WORK_Location1Type">$line/column[@heading-index="WORK_Location1Type"]/string()</mapping>
    <mapping key="WORK_Location1Name">$line/column[@heading-index="WORK_Location1Name"]/string()</mapping>
    <mapping key="WORK_Location1NameType">$line/column[@heading-index="WORK_Location1NameType"]/string()</mapping>
    <mapping key="WORK_Location1NameVocab">$line/column[@heading-index="WORK_Location1NameVocab"]/string()</mapping>
    <mapping key="WORK_Location1NameRefID">$line/column[@heading-index="WORK_Location1NameRefID"]/string()</mapping>
    <mapping key="WORK_Location1ObjType">$line/column[@heading-index="WORK_Location1ObjType"]/string()</mapping>
    <mapping key="WORK_Location1ObjRefID">$line/column[@heading-index="WORK_Location1ObjRefID"]/string()</mapping>
    <mapping key="WORK_Location1Geo">$line/column[@heading-index="WORK_Location1Geo"]/string()</mapping>
    <mapping key="WORK_Location1GeoVocab">$line/column[@heading-index="WORK_Location1GeoVocab"]/string()</mapping>
    <mapping key="WORK_Location1GeoRefid">$line/column[@heading-index="WORK_Location1GeoRefid"]/string()</mapping>
    <mapping key="WORK_Location1GeoPointEPSG">$line/column[@heading-index="WORK_Location1GeoPointEPSG"]/string()</mapping>
    <mapping key="WORK_Location1GeoPointLat">$line/column[@heading-index="WORK_Location1GeoPointLat"]/string()</mapping>
    <mapping key="WORK_Location1GeoPointLong">$line/column[@heading-index="WORK_Location1GeoPointLong"]/string()</mapping>
    <mapping key="WORK_Location2Type">$line/column[@heading-index="WORK_Location2Type"]/string()</mapping>
    <mapping key="WORK_Location2Name">$line/column[@heading-index="WORK_Location2Name"]/string()</mapping>
    <mapping key="WORK_Location2NameType">$line/column[@heading-index="WORK_Location2NameType"]/string()</mapping>
    <mapping key="WORK_Location2NameVocab">$line/column[@heading-index="WORK_Location2NameVocab"]/string()</mapping>
    <mapping key="WORK_Location2NameRefID">$line/column[@heading-index="WORK_Location2NameRefID"]/string()</mapping>
    <mapping key="WORK_Location2ObjType">$line/column[@heading-index="WORK_Location2ObjType"]/string()</mapping>
    <mapping key="WORK_Location2ObjRefID">$line/column[@heading-index="WORK_Location2ObjRefID"]/string()</mapping>
    <mapping key="WORK_Location2Geo">$line/column[@heading-index="WORK_Location2Geo"]/string()</mapping>
    <mapping key="WORK_Location2GeoVocab">$line/column[@heading-index="WORK_Location2GeoVocab"]/string()</mapping>
    <mapping key="WORK_Location2GeoRefid">$line/column[@heading-index="WORK_Location2GeoRefid"]/string()</mapping>
    <mapping key="WORK_Location2GeoPointEPSG">$line/column[@heading-index="WORK_Location2GeoPointEPSG"]/string()</mapping>
    <mapping key="WORK_Location2GeoPointLat">$line/column[@heading-index="WORK_Location2GeoPointLat"]/string()</mapping>
    <mapping key="WORK_Location2GeoPointLong">$line/column[@heading-index="WORK_Location2GeoPointLong"]/string()</mapping>
    <mapping key="WORK_MaterialDisplay">
    let $materialDisplay := $line/column[@heading-index="WORK_MaterialDisplay"]/string()
    
    return 
      if($materialDisplay) then 
        $materialDisplay
      else 
        let $material1 := if($line/column[@heading-index="WORK_Material1"] != "") then ($line/column[@heading-index="WORK_Material1"]/string() ) else ()
        let $material2 := if($line/column[@heading-index="WORK_Material2"] != "") then ($line/column[@heading-index="WORK_Material2"]/string() ) else ()
        let $material3 := if($line/column[@heading-index="WORK_Material3"] != "") then ($line/column[@heading-index="WORK_Material3"]/string() ) else ()
        let $material4 := if($line/column[@heading-index="WORK_Material4"] != "") then ($line/column[@heading-index="WORK_Material4"]/string() ) else ()
        return
    string-join(($material1, $material2, $material3, $material4), '; ')
    </mapping>
    <mapping key="WORK_Material1">$line/column[@heading-index="WORK_Material1"]/string()</mapping>
    <mapping key="WORK_MaterialVocab1">$line/column[@heading-index="WORK_MaterialVocab1"]/string()</mapping>
    <mapping key="WORK_MaterialRefid1">$line/column[@heading-index="WORK_MaterialRefid1"]/string()</mapping>
    <mapping key="WORK_Material2">$line/column[@heading-index="WORK_Material2"]/string()</mapping>
    <mapping key="WORK_MaterialVocab2">$line/column[@heading-index="WORK_MaterialVocab2"]/string()</mapping>
    <mapping key="WORK_MaterialRefid2">$line/column[@heading-index="WORK_MaterialRefid2"]/string()</mapping>
    <mapping key="WORK_Material3">$line/column[@heading-index="WORK_Material3"]/string()</mapping>
    <mapping key="WORK_MaterialVocab3">$line/column[@heading-index="WORK_MaterialVocab3"]/string()</mapping>
    <mapping key="WORK_MaterialRefid3">$line/column[@heading-index="WORK_MaterialRefid3"]/string()</mapping>
    <mapping key="WORK_Material4">$line/column[@heading-index="WORK_Material4"]/string()</mapping>
    <mapping key="WORK_MaterialVocab4">$line/column[@heading-index="WORK_MaterialVocab4"]/string()</mapping>
    <mapping key="WORK_MaterialRefid4">$line/column[@heading-index="WORK_MaterialRefid4"]/string()</mapping>
    <mapping key="WORK_MeasurementsDisplay">
    xquery version "3.0";
    let $measurementsDisplay := $line/column[@heading-index="WORK_MeasurementsDisplay"]/string()

return 
  if($measurementsDisplay)
  then (
    $measurementsDisplay
  ) else (
	  let $m1extent := if($line/column[@heading-index="WORK_Measurements1Extent"]  != "") then ($line/column[@heading-index="WORK_Measurements1Extent"]/string() || "") else ()
	  let $m1unit := if($line/column[@heading-index="WORK_Measurements1Unit"] != "") then ( " " || $line/column[@heading-index="WORK_Measurements1Unit"]/string() || " ") else ()

	  let $m1-1 := if($line/column[@heading-index="WORK_Measurements1Value1"] != "") then ( " " || $line/column[@heading-index="WORK_Measurements1Value1"]/string()) else ()
	  let $m1-2 := if($line/column[@heading-index="WORK_Measurements1Value2"] != "") then ( " x " || $line/column[@heading-index="WORK_Measurements1Value2"]/string()) else ()
	  let $m1-3 := if($line/column[@heading-index="WORK_Measurements1Value3"] != "") then ( " x " || $line/column[@heading-index="WORK_Measurements1Value3"]/string()) else ()
	  let $m1-4 := if($line/column[@heading-index="WORK_Measurements1Value4"] != "") then ( " x " || $line/column[@heading-index="WORK_Measurements1Value4"]/string()) else ()
	        
	  let $m1-all := string-join(($m1-1, $m1-2, $m1-3, $m1-4), '')
	  let $measurements1 := if($m1-all  != "") then ( $m1-all || $m1unit || " (" || $m1extent || ")" ) else ()

      
	  let $m2extent := if($line/column[@heading-index="WORK_Measurements2Extent"]  != "") then ($line/column[@heading-index="WORK_Measurements2Extent"]/string() || "") else ()
	  let $m2unit := if($line/column[@heading-index="WORK_Measurements2Unit"] != "") then ( " " || $line/column[@heading-index="WORK_Measurements2Unit"]/string() || "") else ()

	  let $m2-1 := if($line/column[@heading-index="WORK_Measurements2Value1"] != "") then ( " " || $line/column[@heading-index="WORK_Measurements2Value1"]/string()) else ()
	  let $m2-2 := if($line/column[@heading-index="WORK_Measurements2Value2"] != "") then ( " x " || $line/column[@heading-index="WORK_Measurements2Value2"]/string()) else ()
	  let $m2-3 := if($line/column[@heading-index="WORK_Measurements2Value3"] != "") then ( " x " || $line/column[@heading-index="WORK_Measurements2Value3"]/string()) else ()
	  let $m2-4 := if($line/column[@heading-index="WORK_Measurements2Value4"] != "") then ( " x " || $line/column[@heading-index="WORK_Measurements2Value4"]/string()) else ()
	        
	  let $m2-all := string-join(($m2-1, $m2-2, $m2-3, $m2-4), '')
	  let $measurements2 := if($m2-all  != "") then ( $m2-all || $m2unit || " (" || $m2extent || ")" ) else ()

    return string-join(($measurements1, $measurements2), '; ')
  )
    </mapping>
    <mapping key="WORK_Measurements1Extent">$line/column[@heading-index="WORK_Measurements1Extent"]/string()</mapping>
    <mapping key="WORK_Measurements1Unit">$line/column[@heading-index="WORK_Measurements1Unit"]/string()</mapping>
    <mapping key="WORK_Measurements1Value1">$line/column[@heading-index="WORK_Measurements1Value1"]/string()</mapping>
    <mapping key="WORK_Measurements1Type1">$line/column[@heading-index="WORK_Measurements1Type1"]/string()</mapping>
    <mapping key="WORK_Measurements1Value2">$line/column[@heading-index="WORK_Measurements1Value2"]/string()</mapping>
    <mapping key="WORK_Measurements1Type2">$line/column[@heading-index="WORK_Measurements1Type2"]/string()</mapping>
    <mapping key="WORK_Measurements1Value3">$line/column[@heading-index="WORK_Measurements1Value3"]/string()</mapping>
    <mapping key="WORK_Measurements1Type3">$line/column[@heading-index="WORK_Measurements1Type3"]/string()</mapping>
    <mapping key="WORK_Measurements1Value4">$line/column[@heading-index="WORK_Measurements1Value4"]/string()</mapping>
    <mapping key="WORK_Measurements1Type4">$line/column[@heading-index="WORK_Measurements1Type4"]/string()</mapping>
    <mapping key="WORK_Measurements2Extent">$line/column[@heading-index="WORK_Measurements2Extent"]/string()</mapping>
    <mapping key="WORK_Measurements2Unit">$line/column[@heading-index="WORK_Measurements2Unit"]/string()</mapping>
    <mapping key="WORK_Measurements2Value1">$line/column[@heading-index="WORK_Measurements2Value1"]/string()</mapping>
    <mapping key="WORK_Measurements2Type1">$line/column[@heading-index="WORK_Measurements2Type1"]/string()</mapping>
    <mapping key="WORK_Measurements2Value2">$line/column[@heading-index="WORK_Measurements2Value2"]/string()</mapping>
    <mapping key="WORK_Measurements2Type2">$line/column[@heading-index="WORK_Measurements2Type2"]/string()</mapping>
    <mapping key="WORK_Measurements2Value3">$line/column[@heading-index="WORK_Measurements2Value3"]/string()</mapping>
    <mapping key="WORK_Measurements2Type3">$line/column[@heading-index="WORK_Measurements2Type3"]/string()</mapping>
    <mapping key="WORK_Measurements2Value4">$line/column[@heading-index="WORK_Measurements2Value4"]/string()</mapping>
    <mapping key="WORK_Measurements2Type4">$line/column[@heading-index="WORK_Measurements2Type4"]/string()</mapping>
    <mapping key="WORK_RelationDisplay">
        xquery version "3.0";
let $relationDisplay := $line/column[@heading-index="WORK_RelationDisplay"]/string()

return 
  if($relationDisplay)
  then (
    $relationDisplay
  ) else (
    let $relation1 :=
      if($line/column[@heading-index="WORK_RelatedWork1"] != "")
      then (
	        let $relWork1 := if($line/column[@heading-index="WORK_RelatedWork1"]  != "") then ($line/column[@heading-index="WORK_RelatedWork1"]/string()) else ()
	        let $rel1Type := if($line/column[@heading-index="WORK_RelationType1"]  != "") then ($line/column[@heading-index="WORK_RelationType1"]/string()) else ()
	    return 
	        string-join(($rel1Type, $relWork1), ' ')
      ) else ()

    let $relation2 :=
      if($line/column[@heading-index="WORK_RelatedWork2"] != "")
      then (
	        let $relWork2 := if($line/column[@heading-index="WORK_RelatedWork2"]  != "") then ($line/column[@heading-index="WORK_RelatedWork2"]/string()) else ()
	        let $rel2Type := if($line/column[@heading-index="WORK_RelationType2"]  != "") then ($line/column[@heading-index="WORK_RelationType2"]/string()) else ()
	    return 
	        string-join(($rel2Type, $relWork2), ' ')
	  ) else ()

    return string-join(($relation1, $relation2), '; ')
)
    </mapping>
    <mapping key="WORK_RelatedWork1">$line/column[@heading-index="WORK_RelatedWork1"]/string()</mapping>
    <mapping key="WORK_RelationType1">$line/column[@heading-index="WORK_RelationType1"]/string()</mapping>
    <mapping key="WORK_RelatedWork2">$line/column[@heading-index="WORK_RelatedWork2"]/string()</mapping>
    <mapping key="WORK_RelationType2">$line/column[@heading-index="WORK_RelationType2"]/string()</mapping>
    <mapping key="WORK_RightsDisplay">$line/column[@heading-index="WORK_RightsDisplay"]/string()</mapping>
    <mapping key="WORK_SourceDisplay">$line/column[@heading-index="WORK_SourceDisplay"]/string()</mapping>
    <mapping key="WORK_StateEditionDisplay">$line/column[@heading-index="WORK_StateEditionDisplay"]/string()</mapping>
    <mapping key="WORK_StylePeriodDisplay">
let $stylePeriodDisplay := if($line/column[@heading-index="WORK_StylePeriodDisplay"] != "") then ($line/column[@heading-index="WORK_StylePeriodDisplay"]/string()) else ()

let $stylePeriod1 := if($line/column[@heading-index="WORK_StylePeriod1"] != "") then ($line/column[@heading-index="WORK_StylePeriod1"]/string()) else ()
let $stylePeriod2 := if($line/column[@heading-index="WORK_StylePeriod2"] != "") then ($line/column[@heading-index="WORK_StylePeriod2"]/string()) else ()
let $stylePeriod3 := if($line/column[@heading-index="WORK_StylePeriod3"] != "") then ($line/column[@heading-index="WORK_StylePeriod3"]/string()) else ()
let $stylePeriod4 := if($line/column[@heading-index="WORK_StylePeriod4"] != "") then ($line/column[@heading-index="WORK_StylePeriod4"]/string()) else ()

return 
  if($stylePeriodDisplay)
  then (
    $stylePeriodDisplay
  ) else (
    string-join(($stylePeriod1, $stylePeriod2, $stylePeriod3, $stylePeriod4), '; ')
  )
    </mapping>
    <mapping key="WORK_StylePeriod1">$line/column[@heading-index="WORK_StylePeriod1"]/string()</mapping>
    <mapping key="WORK_StylePeriodVocab1">$line/column[@heading-index="WORK_StylePeriodVocab1"]/string()</mapping>
    <mapping key="WORK_StylePeriodRefid1">$line/column[@heading-index="WORK_StylePeriodRefid1"]/string()</mapping>
    <mapping key="WORK_StylePeriod2">$line/column[@heading-index="WORK_StylePeriod2"]/string()</mapping>
    <mapping key="WORK_StylePeriodVocab2">$line/column[@heading-index="WORK_StylePeriodVocab2"]/string()</mapping>
    <mapping key="WORK_StylePeriodRefid2">$line/column[@heading-index="WORK_StylePeriodRefid2"]/string()</mapping>
    <mapping key="WORK_StylePeriod3">$line/column[@heading-index="WORK_StylePeriod3"]/string()</mapping>
    <mapping key="WORK_StylePeriodVocab3">$line/column[@heading-index="WORK_StylePeriodVocab3"]/string()</mapping>
    <mapping key="WORK_StylePeriodRefid3">$line/column[@heading-index="WORK_StylePeriodRefid3"]/string()</mapping>
    <mapping key="WORK_StylePeriod4">$line/column[@heading-index="WORK_StylePeriod4"]/string()</mapping>
    <mapping key="WORK_StylePeriodVocab4">$line/column[@heading-index="WORK_StylePeriodVocab4"]/string()</mapping>
    <mapping key="WORK_StylePeriodRefid4">$line/column[@heading-index="WORK_StylePeriodRefid4"]/string()</mapping>
    <mapping key="WORK_SubjectDisplay">
let $subjectDisplay := if($line/column[@heading-index="WORK_SubjectDisplay"] != "") then ($line/column[@heading-index="WORK_SubjectDisplay"]/string()) else ()

let $subject1 := if($line/column[@heading-index="WORK_Subject1"] != "") then ($line/column[@heading-index="WORK_Subject1"]/string()) else ()
let $subject2 := if($line/column[@heading-index="WORK_Subject2"] != "") then ($line/column[@heading-index="WORK_Subject2"]/string()) else ()
let $subject3 := if($line/column[@heading-index="WORK_Subject3"] != "") then ($line/column[@heading-index="WORK_Subject3"]/string()) else ()
let $subject4 := if($line/column[@heading-index="WORK_Subject4"] != "") then ($line/column[@heading-index="WORK_Subject4"]/string()) else ()
let $subject5 := if($line/column[@heading-index="WORK_Subject5"] != "") then ($line/column[@heading-index="WORK_Subject5"]/string()) else ()
let $subject6 := if($line/column[@heading-index="WORK_Subject6"] != "") then ($line/column[@heading-index="WORK_Subject6"]/string()) else ()
let $subject7 := if($line/column[@heading-index="WORK_Subject7"] != "") then ($line/column[@heading-index="WORK_Subject7"]/string()) else ()
let $subject8 := if($line/column[@heading-index="WORK_Subject8"] != "") then ($line/column[@heading-index="WORK_Subject8"]/string()) else ()

return 
  if($subjectDisplay)
  then (
    $subjectDisplay
  ) else (
    string-join(($subject1, $subject2, $subject3, $subject4, $subject5, $subject6, $subject7, $subject8), '; ')
  )
    </mapping>
    <mapping key="WORK_Subject1">$line/column[@heading-index="WORK_Subject1"]/string()</mapping>
    <mapping key="WORK_SubjectType1">$line/column[@heading-index="WORK_SubjectType1"]/string()</mapping>
    <mapping key="WORK_SubjectVocab1">$line/column[@heading-index="WORK_SubjectVocab1"]/string()</mapping>
    <mapping key="WORK_SubjectRefid1">$line/column[@heading-index="WORK_SubjectRefid1"]/string()</mapping>
    <mapping key="WORK_Subject2">$line/column[@heading-index="WORK_Subject2"]/string()</mapping>
    <mapping key="WORK_SubjectType2">$line/column[@heading-index="WORK_SubjectType2"]/string()</mapping>
    <mapping key="WORK_SubjectVocab2">$line/column[@heading-index="WORK_SubjectVocab2"]/string()</mapping>
    <mapping key="WORK_SubjectRefid2">$line/column[@heading-index="WORK_SubjectRefid2"]/string()</mapping>
    <mapping key="WORK_Subject3">$line/column[@heading-index="WORK_Subject3"]/string()</mapping>
    <mapping key="WORK_SubjectType3">$line/column[@heading-index="WORK_SubjectType3"]/string()</mapping>
    <mapping key="WORK_SubjectVocab3">$line/column[@heading-index="WORK_SubjectVocab3"]/string()</mapping>
    <mapping key="WORK_SubjectRefid3">$line/column[@heading-index="WORK_SubjectRefid3"]/string()</mapping>
    <mapping key="WORK_Subject4">$line/column[@heading-index="WORK_Subject4"]/string()</mapping>
    <mapping key="WORK_SubjectType4">$line/column[@heading-index="WORK_SubjectType4"]/string()</mapping>
    <mapping key="WORK_SubjectVocab4">$line/column[@heading-index="WORK_SubjectVocab4"]/string()</mapping>
    <mapping key="WORK_SubjectRefid4">$line/column[@heading-index="WORK_SubjectRefid4"]/string()</mapping>
    <mapping key="WORK_Subject5">$line/column[@heading-index="WORK_Subject5"]/string()</mapping>
    <mapping key="WORK_SubjectType5">$line/column[@heading-index="WORK_SubjectType5"]/string()</mapping>
    <mapping key="WORK_SubjectVocab5">$line/column[@heading-index="WORK_SubjectVocab5"]/string()</mapping>
    <mapping key="WORK_SubjectRefid5">$line/column[@heading-index="WORK_SubjectRefid5"]/string()</mapping>
    <mapping key="WORK_Subject6">$line/column[@heading-index="WORK_Subject6"]/string()</mapping>
    <mapping key="WORK_SubjectType6">$line/column[@heading-index="WORK_SubjectType6"]/string()</mapping>
    <mapping key="WORK_SubjectVocab6">$line/column[@heading-index="WORK_SubjectVocab6"]/string()</mapping>
    <mapping key="WORK_SubjectRefid6">$line/column[@heading-index="WORK_SubjectRefid6"]/string()</mapping>
    <mapping key="WORK_Subject7">$line/column[@heading-index="WORK_Subject7"]/string()</mapping>
    <mapping key="WORK_SubjectType7">$line/column[@heading-index="WORK_SubjectType7"]/string()</mapping>
    <mapping key="WORK_SubjectVocab7">$line/column[@heading-index="WORK_SubjectVocab7"]/string()</mapping>
    <mapping key="WORK_SubjectRefid7">$line/column[@heading-index="WORK_SubjectRefid7"]/string()</mapping>
    <mapping key="WORK_Subject8">$line/column[@heading-index="WORK_Subject8"]/string()</mapping>
    <mapping key="WORK_SubjectType8">$line/column[@heading-index="WORK_SubjectType8"]/string()</mapping>
    <mapping key="WORK_SubjectVocab8">$line/column[@heading-index="WORK_SubjectVocab8"]/string()</mapping>
    <mapping key="WORK_SubjectRefid8">$line/column[@heading-index="WORK_SubjectRefid8"]/string()</mapping>
    <mapping key="WORK_TechniqueDisplay">
let $techniqueDisplay := if($line/column[@heading-index="WORK_TechniqueDisplay"] != "") then ($line/column[@heading-index="WORK_TechniqueDisplay"]/string()) else ()

let $technique1 := if($line/column[@heading-index="WORK_Technique1"] != "") then ($line/column[@heading-index="WORK_Technique1"]/string()) else ()
let $technique2 := if($line/column[@heading-index="WORK_Technique2"] != "") then ($line/column[@heading-index="WORK_Technique2"]/string()) else ()
let $technique3 := if($line/column[@heading-index="WORK_Technique3"] != "") then ($line/column[@heading-index="WORK_Technique3"]/string()) else ()
let $technique4 := if($line/column[@heading-index="WORK_Technique4"] != "") then ($line/column[@heading-index="WORK_Technique4"]/string()) else ()

return 
  if($techniqueDisplay)
  then (
    $techniqueDisplay
  ) else (
    string-join(($technique1, $technique2, $technique3, $technique4), '; ')
  )
    </mapping>
    <mapping key="WORK_Technique1">$line/column[@heading-index="WORK_Technique1"]/string()</mapping>
    <mapping key="WORK_TechniqueVocab1">$line/column[@heading-index="WORK_TechniqueVocab1"]/string()</mapping>
    <mapping key="WORK_TechniqueRefid1">$line/column[@heading-index="WORK_TechniqueRefid1"]/string()</mapping>
    <mapping key="WORK_Technique2">$line/column[@heading-index="WORK_Technique2"]/string()</mapping>
    <mapping key="WORK_TechniqueVocab2">$line/column[@heading-index="WORK_TechniqueVocab2"]/string()</mapping>
    <mapping key="WORK_TechniqueRefid2">$line/column[@heading-index="WORK_TechniqueRefid2"]/string()</mapping>
    <mapping key="WORK_Technique3">$line/column[@heading-index="WORK_Technique3"]/string()</mapping>
    <mapping key="WORK_TechniqueVocab3">$line/column[@heading-index="WORK_TechniqueVocab3"]/string()</mapping>
    <mapping key="WORK_TechniqueRefid3">$line/column[@heading-index="WORK_TechniqueRefid3"]/string()</mapping>
    <mapping key="WORK_Technique4">$line/column[@heading-index="WORK_Technique4"]/string()</mapping>
    <mapping key="WORK_TechniqueVocab4">$line/column[@heading-index="WORK_TechniqueVocab4"]/string()</mapping>
    <mapping key="WORK_TechniqueRefid4">$line/column[@heading-index="WORK_TechniqueRefid4"]/string()</mapping>
    <mapping key="WORK_TextrefDisplay">
        let $textrefDisplay := $line/column[@heading-index="WORK_TextrefDisplay"]/string()
let $textrefName := if($line/column[@heading-index="WORK_TextrefName"] != "") then ($line/column[@heading-index="WORK_TextrefName"]/string()) else ()
let $textrefRefid := if($line/column[@heading-index="WORK_TextrefRefid"] != "") then ($line/column[@heading-index="WORK_TextrefRefid"]/string()) else ()

return 
  if($textrefDisplay)
  then (
    $textrefDisplay
  ) else (
    string-join(($textrefName, $textrefRefid), ' ')
  )
    </mapping>
    <mapping key="WORK_TextrefName">$line/column[@heading-index="WORK_TextrefName"]/string()</mapping>
    <mapping key="WORK_TextrefNameType">$line/column[@heading-index="WORK_TextrefNameType"]/string()</mapping>
    <mapping key="WORK_TextrefRefid">$line/column[@heading-index="WORK_TextrefRefid"]/string()</mapping>
    <mapping key="WORK_TextrefRefidType">$line/column[@heading-index="WORK_TextrefRefidType"]/string()</mapping>
    <mapping key="WORK_TitleDisplay">
        let $titleDisplay := $line/column[@heading-index="WORK_TitleDisplay"]/string()
let $prefTitle1 := $line/column[@heading-index="WORK_TitlePref"]/string()

return 
  if($titleDisplay)
  then (
    $titleDisplay
  ) else (
    $prefTitle1
  )
    </mapping>
    <mapping key="WORK_TitlePref">$line/column[@heading-index="WORK_TitlePref"]/string()</mapping>
    <mapping key="WORK_TitlePrefType">$line/column[@heading-index="WORK_TitlePrefType"]/string()</mapping>
    <mapping key="WORK_TitleAlt">$line/column[@heading-index="WORK_TitleAlt"]/string()</mapping>
    <mapping key="WORK_TitleAltType">$line/column[@heading-index="WORK_TitleAltType"]/string()</mapping>
    <mapping key="WORK_WorktypeDisplay">
let $worktypeDisplay := if($line/column[@heading-index="WORK_WorktypeDisplay"] != "") then ($line/column[@heading-index="WORK_WorktypeDisplay"]/string()) else ()

let $worktype1 := if($line/column[@heading-index="WORK_Worktype1"] != "") then ($line/column[@heading-index="WORK_Worktype1"]/string()) else ()
let $worktype2 := if($line/column[@heading-index="WORK_Worktype2"] != "") then ($line/column[@heading-index="WORK_Worktype2"]/string()) else ()
let $worktype3 := if($line/column[@heading-index="WORK_Worktype3"] != "") then ($line/column[@heading-index="WORK_Worktype3"]/string()) else ()

return 
  if($worktypeDisplay)
  then (
    $worktypeDisplay
  ) else (
    string-join(($worktype1, $worktype2, $worktype3), '; ')
  )
    </mapping>
    <mapping key="WORK_Worktype1">$line/column[@heading-index="WORK_Worktype1"]/string()</mapping>
    <mapping key="WORK_WorktypeVocab1">$line/column[@heading-index="WORK_WorktypeVocab1"]/string()</mapping>
    <mapping key="WORK_WorktypeRefid1">$line/column[@heading-index="WORK_WorktypeRefid1"]/string()</mapping>
    <mapping key="WORK_Worktype2">$line/column[@heading-index="WORK_Worktype2"]/string()</mapping>
    <mapping key="WORK_WorktypeVocab2">$line/column[@heading-index="WORK_WorktypeVocab2"]/string()</mapping>
    <mapping key="WORK_WorktypeRefid2">$line/column[@heading-index="WORK_WorktypeRefid2"]/string()</mapping>
    <mapping key="WORK_Worktype3">$line/column[@heading-index="WORK_Worktype3"]/string()</mapping>
    <mapping key="WORK_WorktypeVocab3">$line/column[@heading-index="WORK_WorktypeVocab3"]/string()</mapping>
    <mapping key="WORK_WorktypeRefid3">$line/column[@heading-index="WORK_WorktypeRefid3"]/string()</mapping>
    <mapping key="IMAGE_AgentDisplay">
    xquery version "3.0";

let $agentDisplay := $line/column[@heading-index="IMAGE_AgentDisplay"]/string()
return 
  if($agentDisplay)
  then (
    $agentDisplay
  ) else (
    let $agent1 :=
      if($line/column[@heading-index="IMAGE_Agent1Name"] != "")
      then (
	        let $role := if($line/column[@heading-index="IMAGE_Agent1Role"] != "") then ( " (" || $line/column[@heading-index="IMAGE_Agent1Role"]/string() || ")") else ()
	    return $line/column[@heading-index="IMAGE_Agent1Name"]/string() || $role
      ) else ()
      
    return $agent1
  )
    </mapping>
    <mapping key="IMAGE_Agent1NameType">$line/column[@heading-index="IMAGE_Agent1NameType"]/string()</mapping>
    <mapping key="IMAGE_Agent1Name">$line/column[@heading-index="IMAGE_Agent1Name"]/string()</mapping>
    <mapping key="IMAGE_Agent1NameVocab">$line/column[@heading-index="IMAGE_Agent1NameVocab"]/string()</mapping>
    <mapping key="IMAGE_Agent1NameRefid">$line/column[@heading-index="IMAGE_Agent1NameRefid"]/string()</mapping>
    <mapping key="IMAGE_Agent1RoleVocab">$line/column[@heading-index="IMAGE_Agent1RoleVocab"]/string()</mapping>
    <mapping key="IMAGE_Agent1RoleRefid">$line/column[@heading-index="IMAGE_Agent1RoleRefid"]/string()</mapping>
    <mapping key="IMAGE_Agent1Role">$line/column[@heading-index="IMAGE_Agent1Role"]/string()</mapping>
    <mapping key="IMAGE_DateDisplay">$line/column[@heading-index="IMAGE_DateDisplay"]/string()</mapping>
    <mapping key="IMAGE_DescriptionDisplay">$line/column[@heading-index="IMAGE_DescriptionDisplay"]/string()</mapping>
    <mapping key="IMAGE_InscriptionDisplay">$line/column[@heading-index="IMAGE_InscriptionDisplay"]/string()</mapping>
    <mapping key="IMAGE_LocationDisplay">$line/column[@heading-index="IMAGE_LocationDisplay"]/string()</mapping>
    <mapping key="IMAGE_LocationNotes">$line/column[@heading-index="IMAGE_LocationNotes"]/string()</mapping>
    <mapping key="IMAGE_LocationType">$line/column[@heading-index="IMAGE_LocationType"]/string()</mapping>
    <mapping key="IMAGE_LocationName">$line/column[@heading-index="IMAGE_LocationName"]/string()</mapping>
    <mapping key="IMAGE_LocationNameType">$line/column[@heading-index="IMAGE_LocationNameType"]/string()</mapping>
    <mapping key="IMAGE_LocationNameVocab">$line/column[@heading-index="IMAGE_LocationNameVocab"]/string()</mapping>
    <mapping key="IMAGE_LocationNameRefID">$line/column[@heading-index="IMAGE_LocationNameRefID"]/string()</mapping>
    <mapping key="IMAGE_LocationObjType">$line/column[@heading-index="IMAGE_LocationObjType"]/string()</mapping>
    <mapping key="IMAGE_LocationObjRefID">$line/column[@heading-index="IMAGE_LocationObjRefID"]/string()</mapping>
    <mapping key="IMAGE_LocationGeo">$line/column[@heading-index="IMAGE_LocationGeo"]/string()</mapping>
    <mapping key="IMAGE_LocationGeoVocab">$line/column[@heading-index="IMAGE_LocationGeoVocab"]/string()</mapping>
    <mapping key="IMAGE_LocationGeoRefid">$line/column[@heading-index="IMAGE_LocationGeoRefid"]/string()</mapping>
    <mapping key="IMAGE_LocationGeoPointEPSG">$line/column[@heading-index="IMAGE_LocationGeoPointEPSG"]/string()</mapping>
    <mapping key="IMAGE_LocationGeoPointLat">$line/column[@heading-index="IMAGE_LocationGeoPointLat"]/string()</mapping>
    <mapping key="IMAGE_LocationGeoPointLong">$line/column[@heading-index="IMAGE_LocationGeoPointLong"]/string()</mapping>
    <mapping key="IMAGE_MaterialDisplay">$line/column[@heading-index="IMAGE_MaterialDisplay"]/string()</mapping>
    <mapping key="IMAGE_MeasurementsDisplay">$line/column[@heading-index="IMAGE_MeasurementsDisplay"]/string()</mapping>
    <mapping key="IMAGE_RelationDisplay">$line/column[@heading-index="IMAGE_RelationDisplay"]/string()</mapping>
    <mapping key="IMAGE_RightsDisplay">$line/column[@heading-index="IMAGE_RightsDisplay"]/string()</mapping>
    <mapping key="IMAGE_RightsNotes">$line/column[@heading-index="IMAGE_RightsNotes"]/string()</mapping>
    <mapping key="IMAGE_RightsType">$line/column[@heading-index="IMAGE_RightsType"]/string()</mapping>
    <mapping key="IMAGE_RightsHolder">$line/column[@heading-index="IMAGE_RightsHolder"]/string()</mapping>
    <mapping key="IMAGE_RightsText">$line/column[@heading-index="IMAGE_RightsText"]/string()</mapping>
    <mapping key="IMAGE_SourceDisplay">
        let $sourceDisplay := $line/column[@heading-index="IMAGE_SourceDisplay"]/string()
        let $session :=  session:set-attribute("tempIMAGE_SourceDisplay", $sourceDisplay)
        return $sourceDisplay
    </mapping>
    <mapping key="IMAGE_SourceValue">$line/column[@heading-index="IMAGE_SourceValue"]/string()</mapping>
    <mapping key="IMAGE_SourceType">$line/column[@heading-index="IMAGE_SourceType"]/string()</mapping>
    <mapping key="IMAGE_SubjectDisplay">
let $subjectDisplay := if($line/column[@heading-index="IMAGE_SubjectDisplay"] != "") then ($line/column[@heading-index="IMAGE_SubjectDisplay"]/string()) else ()

let $subject1 := if($line/column[@heading-index="IMAGE_Subject1"] != "") then ($line/column[@heading-index="IMAGE_Subject1"]/string()) else ()
let $subject2 := if($line/column[@heading-index="IMAGE_Subject2"] != "") then ($line/column[@heading-index="IMAGE_Subject2"]/string()) else ()
let $subject3 := if($line/column[@heading-index="IMAGE_Subject3"] != "") then ($line/column[@heading-index="IMAGE_Subject3"]/string()) else ()

return 
  if($subjectDisplay)
  then (
    $subjectDisplay
  ) else (
    string-join(($subject1, $subject2, $subject3), '; ')
  )
    </mapping>
    <mapping key="IMAGE_Subject1">$line/column[@heading-index="IMAGE_Subject1"]/string()</mapping>
    <mapping key="IMAGE_SubjectRefid1">$line/column[@heading-index="IMAGE_SubjectRefid1"]/string()</mapping>
    <mapping key="IMAGE_SubjectVocab1">$line/column[@heading-index="IMAGE_SubjectVocab1"]/string()</mapping>
    <mapping key="IMAGE_SubjectType1">$line/column[@heading-index="IMAGE_SubjectType1"]/string()</mapping>
    <mapping key="IMAGE_Subject2">$line/column[@heading-index="IMAGE_Subject2"]/string()</mapping>
    <mapping key="IMAGE_SubjectRefid2">$line/column[@heading-index="IMAGE_SubjectRefid2"]/string()</mapping>
    <mapping key="IMAGE_SubjectVocab2">$line/column[@heading-index="IMAGE_SubjectVocab2"]/string()</mapping>
    <mapping key="IMAGE_SubjectType2">$line/column[@heading-index="IMAGE_SubjectType2"]/string()</mapping>
    <mapping key="IMAGE_Subject3">$line/column[@heading-index="IMAGE_Subject3"]/string()</mapping>
    <mapping key="IMAGE_SubjectRefid3">$line/column[@heading-index="IMAGE_SubjectRefid3"]/string()</mapping>
    <mapping key="IMAGE_SubjectVocab3">$line/column[@heading-index="IMAGE_SubjectVocab3"]/string()</mapping>
    <mapping key="IMAGE_SubjectType3">$line/column[@heading-index="IMAGE_SubjectType3"]/string()</mapping>
    <mapping key="IMAGE_TechniqueDisplay">
let $techniqueDisplay := if($line/column[@heading-index="IMAGE_TechniqueDisplay"] != "") then ($line/column[@heading-index="IMAGE_TechniqueDisplay"]/string()) else ()

let $technique := if($line/column[@heading-index="IMAGE_Technique"] != "") then ($line/column[@heading-index="IMAGE_Technique"]/string()) else ()

return 
  if($techniqueDisplay)
  then (
    $techniqueDisplay
  ) else (
    $technique
  )
    </mapping>
    <mapping key="IMAGE_Technique">
    let $image_technique := if($line/column[@heading-index="IMAGE_Technique"] != "") then ($line/column[@heading-index="IMAGE_Technique"]/string()) else (
    "digital imaging"
    )
return
    $image_technique
    </mapping>
    <mapping key="IMAGE_TechniqueVocab">
    let $image_techniqueVocab := if($line/column[@heading-index="IMAGE_Technique"] != "") then ($line/column[@heading-index="IMAGE_TechniqueVocab"]/string()) else (
    "AAT"
    )
return
    $image_techniqueVocab
    </mapping>
    <mapping key="IMAGE_TechniqueRefid">
    let $image_techniqueRefid := if($line/column[@heading-index="IMAGE_Technique"] != "") then ($line/column[@heading-index="IMAGE_TechniqueRefid"]/string()) else (
    "300237903"
    )
return
    $image_techniqueRefid
    </mapping>
    <mapping key="IMAGE_TitleDisplay">
        let $titleDisplay := $line/column[@heading-index="IMAGE_TitleDisplay"]/string()
        let $prefTitle1 := $line/column[@heading-index="IMAGE_Title"]/string()
        let $titleDisplay :=
            if($titleDisplay) then 
                $titleDisplay
            else 
                $prefTitle1
        let $session := session:set-attribute("tempIMAGE_TitleDisplay", $titleDisplay)
        return
            $titleDisplay
    </mapping>
    <mapping key="IMAGE_Title">$line/column[@heading-index="IMAGE_Title"]/string()</mapping>
    <mapping key="IMAGE_TitleType">$line/column[@heading-index="IMAGE_TitleType"]/string()</mapping>
    <mapping key="IMAGE_WorktypeDisplay">
let $worktypeDisplay := if($line/column[@heading-index="IMAGE_WorktypeDisplay"] != "") then ($line/column[@heading-index="IMAGE_WorktypeDisplay"]/string()) else ()

let $worktype := if($line/column[@heading-index="IMAGE_Worktype"] != "") then ($line/column[@heading-index="IMAGE_Worktype"]/string()) else ()

return 
  if($worktypeDisplay)
  then (
    $worktypeDisplay
  ) else (
    $worktype
  )
    </mapping>
    <mapping key="IMAGE_Worktype">
    let $image_worktype := if($line/column[@heading-index="IMAGE_Worktype"] != "") then ($line/column[@heading-index="IMAGE_Worktype"]/string()) else (
    "digital images"
    )
return
    $image_worktype
    </mapping>
    <mapping key="IMAGE_WorktypeVocab">
    let $image_worktypeVocab := if($line/column[@heading-index="IMAGE_Worktype"] != "") then ($line/column[@heading-index="IMAGE_WorktypeVocab"]/string()) else (
    "AAT"
    )
return
    $image_worktypeVocab
    </mapping>
    <mapping key="IMAGE_WorktypeRefid">
    let $image_worktypeRefid := if($line/column[@heading-index="IMAGE_Worktype"] != "") then ($line/column[@heading-index="IMAGE_WorktypeRefid"]/string()) else (
    "300215302"
    )
return
    $image_worktypeRefid
    </mapping>
    <mapping key="WORK_ID">
        xquery version "3.0";
        declare namespace vra="http://www.vraweb.org/vracore4.htm";

        let $workID := $line/column[@heading-index="WORK_ID"]/string()
        let $returnID :=
            if($workID) then 
                let $workID_A :=  if(starts-with($workID, "w_")) then ($workID) else ("w_" || $workID) 
                    return $workID_A
                else
                    concat("w_", util:uuid())
        (: insert the relation node to the vra:image record into existing work-record (if exists, then no work record will be generated) :)
        let $mappedValues := session:get-attribute("mapped-values") 

        let $existing-work-record := doc(session:get-attribute("file-uri"))//vra:work[@id=$returnID]
        let $image-uuid := session:get-attribute("tempImageUUID")
        
        let $insert-node :=
            if ($existing-work-record and not($existing-work-record/vra:relationSet/vra:relation[@relids=$image-uuid])) then
                let $source :=  session:get-attribute("tempIMAGE_VendorName")
                let $relationName := session:get-attribute("tempIMAGE_TitleDisplay")
                <!-- let $relation := <relation xmlns="http://www.vraweb.org/vracore4.htm" type="imageIs" relids="{$image-uuid}" source="{$source}" pref="false">{$relationName}</relation> -->
                let $relation := &lt;relation xmlns="http://www.vraweb.org/vracore4.htm" type="imageIs" relids="{$image-uuid}"&gt;{$relationName}&lt;/relation&gt;
            
<!--                let $source :=  session:get-attribute("tempIMAGE_SourceDisplay")--><!--                let $relationName := session:get-attribute("tempIMAGE_TitleDisplay")--><!--                let $relation := <relation xmlns="http://www.vraweb.org/vracore4.htm" type="imageIs" relids="{$image-uuid}" source="{$source}" pref="false">{$relationName}</relation>-->
                return
                    update insert 
                        $relation
                    into 
                        $existing-work-record/vra:relationSet
                    
            else
                ()
    
        return $returnID
    </mapping>
</xml>